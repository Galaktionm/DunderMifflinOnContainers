services:
  aggregator:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: BasketService/Dockerfile
    depends_on:
      redis:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: aggregator
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  mongodb:
    image: mongo:latest
  nashuabranch:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: NashuaBranch/Dockerfile
    depends_on:
      postgres:
        condition: service_started
      productservice:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: nashuabranch
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  orderservice:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: OrderService/Dockerfile
    depends_on:
      postgres:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: orderservice
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  postgres:
    environment:
      POSTGRES_DB: HangfireJobs
      POSTGRES_PASSWORD: password
    image: postgres:latest
  productservice:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: ProductService/Dockerfile
    depends_on:
      mongodb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: productservice
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  redis:
    image: redis:alpine
  scrantonbranch:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: ScrantonBranch/Dockerfile
    depends_on:
      postgres:
        condition: service_started
      productservice:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: scrantonbranch
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  userservicejwt:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: UserServiceJWT/Dockerfile
    depends_on:
      postgres:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: userservicejwt
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
version: '3.4'