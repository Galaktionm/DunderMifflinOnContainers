services:
  aggregator:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: BasketService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Aggregator
      target: base
    container_name: Aggregator_1
    depends_on:
      redis:
        condition: service_started
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: aggregator:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/Aggregator.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    ports:
    - target: 80
    - target: 443
    tty: true
    volumes:
    - C:\Users\Administrator\Desktop\DMGit\BasketService:/app:rw
    - C:\Users\Administrator\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\Administrator\.nuget\packages:/root/.nuget/packages:ro
    - C:\Users\Administrator\Desktop\DMGit:/src:rw
  mongodb:
    image: mongo:latest
  nashuabranch:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: NashuaBranch/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: NashuaBranch
      target: base
    container_name: NashuaBranch
    depends_on:
      postgres:
        condition: service_started
      productservice:
        condition: service_started
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: nashuabranch:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/NashuaBranch.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    ports:
    - target: 80
    - target: 443
    tty: true
    volumes:
    - C:\Users\Administrator\Desktop\DMGit\NashuaBranch:/app:rw
    - C:\Users\Administrator\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\Administrator\.nuget\packages:/root/.nuget/packages:ro
    - C:\Users\Administrator\Desktop\DMGit:/src:rw
  orderservice:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: OrderService/Dockerfile
    depends_on:
      postgres:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: orderservice
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  postgres:
    environment:
      POSTGRES_DB: HangfireJobs
      POSTGRES_PASSWORD: password
    image: postgres:latest
  productservice:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: ProductService/Dockerfile
    depends_on:
      mongodb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: productservice
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  redis:
    image: redis:alpine
  scrantonbranch:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: ScrantonBranch/Dockerfile
    depends_on:
      postgres:
        condition: service_started
      productservice:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: scrantonbranch
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  userservicejwt:
    build:
      context: C:\Users\Administrator\Desktop\DMGit
      dockerfile: UserServiceJWT/Dockerfile
    depends_on:
      postgres:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: userservicejwt
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Administrator\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Administrator\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
version: '3.4'